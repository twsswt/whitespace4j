<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project
	name="se-notes.demos.whitespace"
	basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant"
	default="build"
>
	
	<path id="pitest.classpath">

		<fileset dir ="lib" includes="pitest*.jar,junit*.jar"/>

	</path>


	<path id="findbugs.classpath">

		<fileset dir ="lib" includes="*.jar"/>

	</path>

	
	<path id="project.classpath">

		<pathelement location="bin" />
		<fileset dir ="lib" includes="*.jar" />

	</path>

	
	<target
		name="clean"
		description="Deletes all intermediate files."
	>
		
		<delete dir="bin" />
		<delete dir="lib" />
		<delete dir="doc" />
	
	</target>
	
	
	<target
		name="cleanall"
		description="Deletes all files not included in the distribution archive."
		depends="clean"
	>
		
		<delete dir="lib" />

		<delete dir="." includes="*.jar"/>
		
	</target>
	
	
	<target
		name="init"
		description="Initalises the distribution in preparation for compilation of code and documentation."
	>
		
		<mkdir dir="bin"/>
		
	</target>
	
	
	<target
			name="resolve"
			description="Retrieves necessary dependencies for this project."
		>
			
		<ivy:retrieve />
			
	</target>
	
	
	<target
		name="compile"
		depends="init,resolve"
		description="Compiles all java class files."
	>

		<javac
			srcdir="src"
			destdir="bin"
			debug="true"
			debuglevel="lines,vars,source"
			classpathref="project.classpath"
		/>
	
	</target>
	
	
	<target
		name="doc"
		depends="resolve"
	>
		
		<javadoc
			sourcepath="src/"
			destdir="doc/javadoc"
			classpathref="project.classpath"
		/>
			
	</target>

	
	<target name="mutationCoverage" depends="compile">

		<taskdef
			name="pitest"
			classname="org.pitest.ant.PitestTask"
			classpathref="pitest.classpath"
		/>

		<unzip src="lib/pitest-1.0.0.jar" dest=".">
			<patternset><include name="templates/**" /></patternset>
		</unzip>

		<pitest
			pitClasspath="pitest.classpath"
			classPath="project.classpath"
			verbose="false"
			timeStampedReports="false"
			targetClasses="uk.ac.glasgow.senotes.whitespace.*"
			reportDir="docs/"
			sourceDir="src/"
		/>

	</target>



	<target
		name="findbugs"
		depends="compile"
	>

		<taskdef
			name="findbugs"
			classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
			classpathref="findbugs.classpath"
		/>


		<findbugs
			classpathref="findbugs.classpath"
			output="xml"
			outputfile="finbugs-report.xml"
		>
			<auxClasspath refid="project.classpath" />
			<sourcePath path="src/" />
			<class location="bin/" />
		</findbugs>

		<!--java
			classname="edu.umd.cs.findbugs.FindBugs2"
		>

			<arg value="-sortByClass"/>
			<arg value="-timestampNow"/>
			<arg value="-html"/>
			<arg value="-output"/>
			<arg value="findbugs-report.html"/>
			<arg value="-exitcode"/>
			<arg value="-auxclasspath"/>
			<arg value="lib/junit-4.10.jar"/>
			<arg value="-sourcepath"/>
			<arg value="src/"/>
			<arg value="bin/"/>
			<classpath refid="project.classpath"/>
	
		</java-->

	</target>

	
	<target
		name="run"
		depends="compile"
		description="Runs the plugin demonstration."
	>
	
		<java
			classname="uk.ac.glasgow.whitespace4j.Main"
			fork="yes"
			classpathref="project.classpath"
			taskname="whitespace4j"
		>
			<arg value="${charset}"/>
			<arg value="${srcfile}"/>
		</java>
		
	</target>
	
	
	<target
		depends="compile"
		name="test"
	>
		
		<junit>
			<formatter type="xml"/>
			<classpath
				 refid="project.classpath"
			/>

			<test
				name="uk.ac.glasgow.whitespace4j.test.InterpreterTestCase"
			/>
			<test
				name="uk.ac.glasgow.whitespace4j.arithmetic.test.ArithmeticStateTestCase"
			/>
			
		</junit>
	
	</target>
	
	
	<target
		name="src-distrib"
		description="Builds an archive containing source artifacts."
		depends="compile"
		
	>
		
		<zip
			destfile="whitespace4j-src-distrib.zip"
		>
			
			<fileset
				dir="."
				includes="src/**/*.java"
			/>
			
			<fileset
				dir="."
				includes="*.xml,*.properties"
			/>
			
			<fileset
				dir="."
				includes="testset/**/*.ws"
			/>
			
		</zip>
	
	</target>

	
	<target
		name="build"
		depends="compile"
		description="Invokes the compile target."
	/>
		
	
</project>
	
